name: 🛍️ Smart E-commerce Price Monitor

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      force_scrape:
        description: 'Force scrape regardless of schedule'
        required: false
        default: 'false'
        type: boolean
  schedule:
    - cron: '*/15 * * * *'

jobs:
  monitor-prices:
    name: 📈 Monitor Product Prices
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
      - name: 📁 Checkout Repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: |
          npm ci
          npx puppeteer browsers install chrome

      - name: 🧪 Test Firebase Connection
        env:
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_CLIENT_ID: ${{ secrets.FIREBASE_CLIENT_ID }}
          FIREBASE_CLIENT_X509_CERT_URL: ${{ secrets.FIREBASE_CLIENT_X509_CERT_URL }}
          GITHUB_ACTIONS: true
        run: |
          echo "🔍 Testing Firebase connection..."
          npm run test
          echo "✅ Firebase connection test completed!"

      - name: 🧠 Smart Scrape Decision & Execute
        env:
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_CLIENT_ID: ${{ secrets.FIREBASE_CLIENT_ID }}
          FIREBASE_CLIENT_X509_CERT_URL: ${{ secrets.FIREBASE_CLIENT_X509_CERT_URL }}
          GITHUB_ACTIONS: true
          FORCE_SCRAPE: ${{ github.event.inputs.force_scrape }}
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.event.inputs.force_scrape }}" = "true" ]; then
            echo "🚨 Force scraping triggered manually..."
            npm run scrape
          elif [ "${{ github.event_name }}" = "push" ]; then
            echo "📝 Push trigger - running test scrape..."
            npm run scrape
          else
            echo "🤖 Running smart decision logic..."
            npm run scrape:decide
          fi

      - name: 📊 Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: scrape-logs-${{ github.run_number }}
          path: |
            *.log
            npm-debug.log*
          retention-days: 7

      - name: 📧 Summary Report
        if: always()
        run: |
          echo "## 📊 Price Scraping Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Workflow:** ${{ github.workflow }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Repository:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Run ID:** ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check the logs above for detailed scraping results!" >> $GITHUB_STEP_SUMMARY
